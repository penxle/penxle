name: Preview

on:
  pull_request:
    types: [labeled, synchronize]

jobs:
  build-and-deploy:
    name: ${{ matrix.app }}
    runs-on: ubuntu-latest
    if: (github.event.action == 'labeled' && github.event.label.name == 'preview') || (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'preview'))

    strategy:
      fail-fast: false
      matrix:
        app:
          - penxle.com
          - penxle.io
          - help.penxle.com
          - landing.penxle.com

    concurrency:
      group: pr-${{ github.event.pull_request.number }}/${{ matrix.app }}

    steps:
      - name: Issue GitHub App token
        uses: actions/create-github-app-token@v1
        id: gh-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: penxle
          repositories: manifests

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout manifests repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.gh-token.outputs.token }}
          repository: penxle/manifests
          path: apps/${{ matrix.app }}/pulumi/manifests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 721144421085.dkr.ecr.ap-northeast-2.amazonaws.com/${{ matrix.app }}
          tags: type=raw,value=pr-${{ github.event.pull_request.number }}

      - name: Build image
        uses: docker/build-push-action@v5
        id: build
        with:
          push: true
          context: .
          target: runner
          build-args: |
            APP=${{ matrix.app }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=721144421085.dkr.ecr.ap-northeast-2.amazonaws.com/${{ matrix.app }}:cache
          cache-to: type=registry,ref=721144421085.dkr.ecr.ap-northeast-2.amazonaws.com/${{ matrix.app }}:cache,mode=max,image-manifest=true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run code generation
        working-directory: apps/${{ matrix.app }}
        run: pnpm exec turbo run codegen

      - name: Apply infrastructure
        uses: pulumi/actions@v4
        with:
          command: up
          work-dir: apps/${{ matrix.app }}
          stack-name: penxle/pr-${{ github.event.pull_request.number }}
          upsert: true
          refresh: true
          config-map: |
            { "penxle:image.digest": { "value": "${{ steps.build.outputs.digest }}" } }
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_K8S_DELETE_UNREACHABLE: 'true'

      - name: Update manifests
        working-directory: apps/${{ matrix.app }}/pulumi/manifests
        run: |
          git config user.name "penxle[bot]"
          git config user.email "142828998+penxle[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Manifest update for https://github.com/penxle/penxle/commit/${{ github.event.pull_request.head.sha }}"
          git push origin HEAD:$BRANCH
          gh pr create --head $BRANCH --title "Manifest update for ${{ matrix.app }}/pr-${{ github.event.pull_request.number }}" --body "This PR was automatically created by penxle/penxle."
          gh pr merge $BRANCH --rebase --auto --delete-branch
        env:
          BRANCH: ${{ matrix.app }}/pr-${{ github.event.pull_request.number }}/${{ github.run_id}}/${{ github.run_attempt }}
          GITHUB_TOKEN: ${{ steps.gh-token.outputs.token }}
