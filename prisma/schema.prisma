generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id          String   @id
  profileId   String   @map("profile_id")
  profile     Profile  @relation(fields: [profileId], references: [id])
  name        String
  size        Int
  format      String
  width       Int
  height      Int
  path        String
  sizes       Int[]
  hash        String
  color       String
  placeholder String
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("images")
}

model Profile {
  id        String       @id
  userId    String       @map("user_id")
  user      User         @relation(fields: [userId], references: [id])
  name      String
  state     ProfileState
  order     Int
  createdAt DateTime     @default(now()) @map("created_at")

  sessions       Session[]
  uploadedImages Image[]

  @@index([userId, state])
  @@map("profiles")
}

model Session {
  id        String   @id
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  profileId String   @map("profile_id")
  profile   Profile  @relation(fields: [profileId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model User {
  id        String    @id
  email     String    @unique
  password  String?
  state     UserState
  createdAt DateTime  @default(now()) @map("created_at")

  profiles Profile[]
  sessions Session[]

  @@index([id, state])
  @@map("users")
}

enum ProfileState {
  ACTIVE
  INACTIVE
}

enum UserState {
  ACTIVE
  INACTIVE
}
